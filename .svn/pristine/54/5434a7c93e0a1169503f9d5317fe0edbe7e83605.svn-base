package com.changyou.mgp.sdk.mbi.pay.ui;

import org.codehaus.jackson.type.TypeReference;

import android.app.Activity;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.changyou.mgp.sdk.mbi.R;
import com.changyou.mgp.sdk.mbi.config.Contants;
import com.changyou.mgp.sdk.mbi.config.HttpContants;
import com.changyou.mgp.sdk.mbi.config.Params;
import com.changyou.mgp.sdk.mbi.entity.GoodsItem;
import com.changyou.mgp.sdk.mbi.entity.MDOEntity;
import com.changyou.mgp.sdk.mbi.http.MyAsyncResponseHandler;
import com.changyou.mgp.sdk.mbi.http.MyHttpClient;
import com.changyou.mgp.sdk.mbi.log.CYLog;
import com.changyou.mgp.sdk.mbi.pay.adapter.PaymentAdapter;
import com.changyou.mgp.sdk.mbi.pay.alipay.MGPAlipay;
import com.changyou.mgp.sdk.mbi.ui.base.BaseFragment;
import com.changyou.mgp.sdk.mbi.ui.widget.WaitingDialog;
import com.changyou.mgp.sdk.mbi.utils.JSONUtil;
import com.loopj.android.http.RequestParams;

/**
 * 
 * 功能描述：支付方式页�?
 *
 * @author 徐萌�?xumengyang)
 *
 * @date 2014-1-15
 */
public class CYMGPaymentWayFragment extends BaseFragment implements OnItemClickListener,OnClickListener{

	private CYLog log = CYLog.getInstance();
	
	private static final int MOD_PRICE = 2;
	
	private Activity mActivity;
	private GoodsItem mGoodsItem;
	private String mUID;
	private WaitingDialog mWaitingDialog;
	private String mCurrentOrderID;//本次生成的订单号
	private PaymentAdapter mAdapter;
//	private String mGoodsName;//商品名称
//	private String mGoodsDescription;//商品描述
//	private String mGoodsPrice;//商品价格
//	private String mGoodsID;//商品ID
//	private String mGoodsRegistID;//商品注册ID
	
	private ListView mListView;
	private ImageButton mServiceImgBtn;
	private Button mRightBtn;
	private TextView mTitleTv;
	private ImageButton mBackIBtn;
	private View mTitle;
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.mgp_payment_way, container,false);
		this.mListView = (ListView)view.findViewById(R.id.mgp_payment_lv);
		this.mWaitingDialog = new WaitingDialog(mActivity);
		this.mTitle = view.findViewById(R.id.payment_title);
		this.mBackIBtn = (ImageButton)mTitle.findViewById(R.id.mgp_title_left_ibtn);
		this.mServiceImgBtn = (ImageButton)mTitle.findViewById(R.id.mgp_title_right_imgbtn);
		this.mTitleTv = (TextView)mTitle.findViewById(R.id.mgp_title_tv);
		this.mRightBtn = (Button)mTitle.findViewById(R.id.mgp_title_right_btn);
		this.mRightBtn.setVisibility(View.GONE);
		this.mServiceImgBtn.setVisibility(View.GONE);
		initData();
		initEvent();
		return view;
	}
	
	@Override
	public void onAttach(Activity activity) {
		super.onAttach(activity);
		this.mActivity = activity;
	}
	
	@Override
	public void onDestroy() {
		super.onDestroy();
		if(mWaitingDialog != null){
			mWaitingDialog.dismiss();
		}
		mWaitingDialog = null;
	}
	
	@Override
	protected void initData() {
		Bundle b = getArguments();
		this.mGoodsItem = (GoodsItem)b.getSerializable(Params.GOODSITEM);
		this.mUID = b.getString(Params.UID);
		if (this.mGoodsItem == null) {
			log.e("mGoodsItem is null");
			return;
		}
		if(this.mUID == null){
			throw new IllegalAccessError("uid is null");
		}
		this.mCurrentOrderID = b.getString(Params.ORDER_ID);
		if(this.mCurrentOrderID == null){
			throw new IllegalAccessError("order_id is null");
		}
		String[] ways = null;
		if(Double.valueOf(mGoodsItem.getGoods_price()) == MOD_PRICE){
			ways = getResources().getStringArray(R.array.mgp_payment_way_with_mdo);
		}else{
			ways = getResources().getStringArray(R.array.mgp_payment_way);
		}
		//若有两元商品则显示手机短信支�?
		mAdapter = new PaymentAdapter(mActivity, ways);
		mListView.setAdapter(mAdapter);
		this.mTitleTv.setText(R.string.mgp_payment);
		this.mServiceImgBtn.setVisibility(View.GONE);
	}

	@Override
	protected void initEvent() {
		this.mListView.setOnItemClickListener(this);
		this.mBackIBtn.setOnClickListener(this);
	}

	@Override
	public void onItemClick(AdapterView<?> parent, View view, int position,
			long id) {
		if(position == 0 && mAdapter.getCount() == 5){
			mdo(mCurrentOrderID);
		}else if(position == (mAdapter.getCount()-1)){
			MGPAlipay.getInstance(mActivity).pay(mUID,mGoodsItem,mCurrentOrderID);
		}else {
			CYMGAlipayWrapFragment f = new CYMGAlipayWrapFragment();
			Bundle b = new Bundle();
			b.putSerializable(Params.GOODSITEM, mGoodsItem);
			b.putString(Params.ALIPAY_WRAP.TRADE_NO, mCurrentOrderID);
			b.putString(Params.ALIPAY_WRAP.UID, mUID);
			b.putInt(Params.ALIPAY_WRAP.WRAP_WAY, mAdapter.getCount() == 5 ? position-1 : position);
			f.setArguments(b);
			getFragmentManager().beginTransaction().replace(R.id.payment_root_layout, f, Contants.FragmentTag.ALIPAY_WRAP_FRAGMENT)
			.addToBackStack(Contants.FragmentTag.ALIPAY_WRAP_FRAGMENT).commit();
		}
	}

	/**
	 * 
	 * 功能描述：向服务器请求手机短信支付数�?
	 *
	 * @author 徐萌�?xumengyang)
	 * @param 
	 * @return void
	 * @date 2014-3-15 下午3:12:32
	 *
	 */
	private void mdo(String orderID){
		RequestParams params = new RequestParams();
		params.put("order_id", orderID);
		new MyHttpClient(mActivity).get(HttpContants.MDO, params, new MyAsyncResponseHandler(){
			
			@Override
			public void onStart() {
				mWaitingDialog.show();
			}
			
			@Override
			public void onSuccess(int statusCode, String content) {
				mWaitingDialog.dismiss();
				log.d("mdo result = "+content);
				try {
					MDOEntity e = JSONUtil.getMapper().readValue(content, new TypeReference<MDOEntity>() {
					});
					if(e != null){
						Uri uri = Uri.parse("smsto:"+e.getMsgphone());
						Intent intent = new Intent(Intent.ACTION_SENDTO,uri);
						intent.putExtra("sms_body", e.getMsgcontent());
						mActivity.startActivity(intent);
					}else{
						log.e("e is null");
					}
				} catch (Exception e) {
					log.e(e);
				}
			}
			
			@Override
			public void onFailure(Throwable error, String content) {
				mWaitingDialog.dismiss();
				log.e("mdo result = "+content);
				try {
					MDOEntity e = JSONUtil.getMapper().readValue(content, new TypeReference<MDOEntity>() {
					});
					Toast.makeText(mActivity, e.getClient_message(), Toast.LENGTH_LONG).show();
				} catch (Exception e) {
					log.e(e);
				}
			}
			
		});
	}

	@Override
	public void onClick(View v) {
		if(v.getId()==R.id.mgp_title_left_ibtn){
			((CYMGPaymentActivity)mActivity).goback();
		}
	}
}
