/*******************************************************************************
 *    工程名称   ： CYMGSDK
 *    文件名    ： WeixinPayDo.java
 *              (C) Copyright Cyou-inc Corporation 2014
 *               All Rights Reserved.
 *   
 ******************************************************************************/
package com.changyou.mgp.sdk.mbi.pay.weixin;

import java.util.LinkedList;
import java.util.List;
import java.util.Random;

import org.apache.http.NameValuePair;
import org.apache.http.client.utils.URLEncodedUtils;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONObject;

import com.changyou.mgp.sdk.mbi.config.HttpContants;
import com.changyou.mgp.sdk.mbi.entity.GoodsItem;
import com.changyou.mgp.sdk.mbi.log.CYLog;
import com.tencent.mm.sdk.modelpay.PayReq;
import com.tencent.mm.sdk.openapi.IWXAPI;

/**
 * <PRE>
 * 作用
 *       XXXX
 * 限制
 *       无。
 * 注意事项
 *       无。
 * </PRE>
 */

public class WeixinPayDo {
	private static CYLog log = CYLog.getInstance();
	
	private long timeStamp;
	private String nonceStr=null;
	private String  packageValue=null;

	private String genSign(List<NameValuePair> params) {
		StringBuilder sb = new StringBuilder();
		
		int i = 0;
		for (; i < params.size() - 1; i++) {
			sb.append(params.get(i).getName());
			sb.append('=');
			sb.append(params.get(i).getValue());
			sb.append('&');
		}
		sb.append(params.get(i).getName());
		sb.append('=');
		sb.append(params.get(i).getValue());
		
		String sha1 = Util.sha1(sb.toString());
		log.d( "genSign, sha1 = " + sha1);
		return sha1;
	}
	
	
	
	String genProductArgs(GoodsItem mGoodsItem) throws WeixinPayException{
		JSONObject json = new JSONObject();
		
		
		try {
			json.put("appid", WeixinPayModel.APP_ID);
			String traceId = getTraceId();  // traceId 由开发者自定义，可用于订单的查询与跟踪，建议根据支付用户信息生成此id
			json.put("traceid", traceId);
			nonceStr = genNonceStr();
			json.put("noncestr", nonceStr);
			
			List<NameValuePair> packageParams = new LinkedList<NameValuePair>();
			packageParams.add(new BasicNameValuePair("bank_type", "WX"));
			packageParams.add(new BasicNameValuePair("body",mGoodsItem.getGoods_name()));//商品名字 this.mGoodsItem.getGoods_name() "千足金箍棒"
			packageParams.add(new BasicNameValuePair("fee_type", "1"));
			packageParams.add(new BasicNameValuePair("input_charset", "UTF-8"));
			packageParams.add(new BasicNameValuePair("notify_url",HttpContants.getWeixinPayReturnUrl()));//支付回调地址 HttpContants.getWeixinPayReturnUrl() "http://weixin.qq.com"
			
			packageParams.add(new BasicNameValuePair("out_trade_no",PayGood.orderID ));//genOutTradNo()
			packageParams.add(new BasicNameValuePair("partner", WeixinPayModel.PARTNER_ID));
			packageParams.add(new BasicNameValuePair("spbill_create_ip", "196.168.1.1"));
			packageParams.add(new BasicNameValuePair("total_fee", "1"));//商品价格 this.mGoodsItem.getGoods_price() //"1"
			packageValue = genPackage(packageParams);
			
			json.put("package", packageValue);
			timeStamp = genTimeStamp();
			json.put("timestamp", timeStamp);
			
			List<NameValuePair> signParams = new LinkedList<NameValuePair>();
			signParams.add(new BasicNameValuePair("appid", WeixinPayModel.APP_ID));
			signParams.add(new BasicNameValuePair("appkey", WeixinPayModel.APP_KEY));
			signParams.add(new BasicNameValuePair("noncestr", nonceStr));
			signParams.add(new BasicNameValuePair("package", packageValue));
			signParams.add(new BasicNameValuePair("timestamp", String.valueOf(timeStamp)));
			signParams.add(new BasicNameValuePair("traceid", traceId));
			json.put("app_signature", genSign(signParams));
			
			json.put("sign_method", "sha1");
		} catch (Exception e) {
			log.e("genProductArgs fail, ex = " + e.getMessage());
			throw new WeixinPayException(e.getMessage());

		}
		
		return json.toString();
	}
	
	
	private String genPackage(List<NameValuePair> params) {
		StringBuilder sb = new StringBuilder();
		
		for (int i = 0; i < params.size(); i++) {
			sb.append(params.get(i).getName());
			sb.append('=');
			sb.append(params.get(i).getValue());
			sb.append('&');
		}
		sb.append("key=");
		sb.append(WeixinPayModel.PARTNER_KEY); // 注意：不能hardcode在客户端，建议genPackage这个过程都由服务器端完成
		
		// 进行md5摘要前，params内容为原始内容，未经过url encode处理
		String packageSign = Util.MD5.getMessageDigest(sb.toString().getBytes()).toUpperCase();
		
		return URLEncodedUtils.format(params, "utf-8") + "&sign=" + packageSign;
	}
	
	void sendPayReq(IWXAPI api,WeixinPayModel.GetPrepayIdResult result) {

		
		PayReq req = new PayReq();
		req.appId = WeixinPayModel.APP_ID;
		req.partnerId = WeixinPayModel.PARTNER_ID;
		req.prepayId = result.prepayId;
		req.nonceStr = nonceStr;
		req.timeStamp = String.valueOf(timeStamp);
		req.packageValue = "Sign=" + packageValue;
		
		
		List<NameValuePair> signParams = new LinkedList<NameValuePair>();
		signParams.add(new BasicNameValuePair("appid", req.appId));
		signParams.add(new BasicNameValuePair("appkey", WeixinPayModel.APP_KEY));
		signParams.add(new BasicNameValuePair("noncestr", req.nonceStr));
		signParams.add(new BasicNameValuePair("package", req.packageValue));
		signParams.add(new BasicNameValuePair("partnerid", req.partnerId));
		signParams.add(new BasicNameValuePair("prepayid", req.prepayId));
		signParams.add(new BasicNameValuePair("timestamp", req.timeStamp));
		req.sign = genSign(signParams);
		
		// 在支付之前，如果应用没有注册到微信，应该先调用IWXMsg.registerApp将应用注册到微信
		api.sendReq(req);
	
	}
	
	

	/**
	 * 建议 traceid 字段包含用户信息及订单信息，方便后续对订单状态的查询和跟踪
	 */
	private String getTraceId() {
		return "crestxu_" + genTimeStamp(); 
	}
	
	private String genNonceStr() {
		Random random = new Random();
		return Util.MD5.getMessageDigest(String.valueOf(random.nextInt(10000)).getBytes());
	}
	
	private long genTimeStamp() {
		return System.currentTimeMillis() / 1000;
	}

}
