package com.changyou.mgp.sdk.mbi.pay.ui;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.text.TextUtils;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Toast;

import com.changyou.mgp.sdk.mbi.R;
import com.changyou.mgp.sdk.mbi.config.CYMGPrompt;
import com.changyou.mgp.sdk.mbi.config.Contants;
import com.changyou.mgp.sdk.mbi.config.Params;
import com.changyou.mgp.sdk.mbi.config.SDKConfig;
import com.changyou.mgp.sdk.mbi.entity.GoodsItem;
import com.changyou.mgp.sdk.mbi.log.CYLog;
import com.changyou.mgp.sdk.mbi.pay.id.Resource;
import com.changyou.mgp.sdk.mbi.platform.CYMGPayHelper;
import com.changyou.mgp.sdk.mbi.ui.base.BaseActivity;
import com.changyou.mgp.sdk.mbi.utils.ResourceUtil;
/**
 * 
 * 功能描述：支付Activity，承�?个Fragment：MGPPaymentFragment、MGPPaymentWayFragment、MGPCyouProtocolFragment、MGPChargeRecorderFragment
 *
 * @author 严峥(yanzheng)
 * @date 2014-1-20 上午10:25:38
 * 修改历史�?修改人，修改时间，修改原�?内容)
 */
public class CYMGPaymentActivity extends BaseActivity implements OnClickListener{
	
	private CYLog log = CYLog.getInstance();
	
	private Resource mResource=Resource.getInstance();
	
	private String mUID;
	private int mMenuClickCount;//记录物理Menu键按下次数，若等于十次则Toast显示版本号，该功能非产品经理设计，为隐藏的查看版本号的方法
	private String mPackageName;
	
	private Bundle mBundle;
	private Bundle mData;
	
	public boolean isShowPromptFragment=false;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		log.i("MGPPaymentActivity:onCreate");
		super.onCreate(savedInstanceState);
		if (savedInstanceState != null) {
	        savedInstanceState.remove("android:support:fragments");
	    }
		mResource.getResourceID(this);
		this.mPackageName = getPackageName();
		setContentView(ResourceUtil.getResourceIDByName(mPackageName, "layout", "mgp_payment_root"));
		initView();
		initData();
		initEvent();
	}
	
	@Override
	protected void onDestroy() {
		super.onDestroy();
		log.i("MGPPaymentActivity:onDestroy");
	}
	
	@Override
	protected void initView() {
		log.i("initView");
		this.mUID = getIntent().getStringExtra(Params.UID);
		if(TextUtils.isEmpty(this.mUID) || this.mUID == null){
			throw new IllegalAccessError("uid is null");
		}
	}

	@Override
	protected void initData() {
		log.i("initData");
		CYMGPayHelper.getInstance().setContext(this);
		CYMGPaymentFragment f =new CYMGPaymentFragment();
		this.mBundle=getIntent().getExtras();
		f.setArguments(mBundle);
		getSupportFragmentManager().beginTransaction().replace(ResourceUtil.getResourceIDByName(mPackageName, "id", "payment_root_layout"), f,Contants.FragmentTag.PAYMENT_FRAGMENT_TAG).commit();
	}

	@Override
	protected void initEvent() {
		
	}

	@Override
	public void onClick(View v) {
		if(v.getId()==ResourceUtil.getResourceIDByName(mPackageName, "id", "mgp_title_left_ibtn")){
			goback();
		} 
	}
	
	@Override
	protected void onSaveInstanceState(Bundle outState) {
		//复写onSaveInstanceState，阻止自动调用super.onSaveInstanceState,这么做是为了解决某机型上快捷支付后奇葩的崩溃问题
		//解决方案见http://stackoverflow.com/questions/7469082/getting-exception-illegalstateexception-can-not-perform-this-action-after-onsa/10261438#10261438
	}
	
	public void goback(){
		log.d("getSupportFragmentManager().getBackStackEntryCount()="+getSupportFragmentManager().getBackStackEntryCount());
		if(getSupportFragmentManager().getBackStackEntryCount() == 0){
			this.finish();
		}else{
			log.d("popBackStack");
			getSupportFragmentManager().popBackStack();
		}
	}
	
	@Override
	public void onBackPressed() {
		log.d("onBackPressed");
		if(isShowPromptFragment){
			log.d("屏蔽CYMGPaymentWayCardPromptFragment的物理back键");
			return;
		}
		goback();
	}
	
	public void changeFragment(String target,Bundle bundle){
		if(target.equals(Contants.FragmentTag.PAYMENT_WAY_FRAGMENT_TAG)){
			this.mData=bundle;
			CYMGPaymentWayFragment  paymentWayFragment = new CYMGPaymentWayFragment ();
			paymentWayFragment.setArguments(bundle);
			getSupportFragmentManager().beginTransaction().replace(ResourceUtil.getResourceIDByName(mPackageName, "id", "payment_root_layout"), paymentWayFragment
					,Contants.FragmentTag.PAYMENT_WAY_FRAGMENT_TAG).addToBackStack(Contants.FragmentTag.PAYMENT_WAY_FRAGMENT_TAG).commit();
		}else if(target.endsWith(Contants.FragmentTag.PAYMENT_ORDER_FRAGMENT_TAG)){
			CYMGChargeRecorderFragment  chargeRecorderFragment = new CYMGChargeRecorderFragment();
			Bundle b = new Bundle();
			b.putString(Params.UID, mUID);
			chargeRecorderFragment.setArguments(b);
			getSupportFragmentManager().beginTransaction().replace(ResourceUtil.getResourceIDByName(mPackageName, "id", "payment_root_layout"), chargeRecorderFragment,
					Contants.FragmentTag.PAYMENT_ORDER_FRAGMENT_TAG).addToBackStack(Contants.FragmentTag.PAYMENT_ORDER_FRAGMENT_TAG).commit();
		}else if(target.equals(Contants.FragmentTag.PAYMENT_RECHARGE_CENTER_FRAGMENT_TAG)){
			CYMGRechargeCenterFragment cymgRechargeCenterFragment=new CYMGRechargeCenterFragment();
			cymgRechargeCenterFragment.setArguments(bundle);
			getSupportFragmentManager().beginTransaction().replace(ResourceUtil.getResourceIDByName(mPackageName, "id", "payment_root_layout"), cymgRechargeCenterFragment
					,Contants.FragmentTag.PAYMENT_RECHARGE_CENTER_FRAGMENT_TAG).addToBackStack(Contants.FragmentTag.PAYMENT_RECHARGE_CENTER_FRAGMENT_TAG).commit();
		}else if(target.equals(Contants.FragmentTag.PAYMENT_WAY_PHONE_CARD_FRAGMENT_TAG)){
			CYMGPaymentWayPhoneCardFragment cymgPaymentWayPhoneCardFragment=new CYMGPaymentWayPhoneCardFragment();
			cymgPaymentWayPhoneCardFragment.setArguments(bundle);
			getSupportFragmentManager().beginTransaction().replace(ResourceUtil.getResourceIDByName(mPackageName, "id", "payment_root_layout"), cymgPaymentWayPhoneCardFragment
					,Contants.FragmentTag.PAYMENT_WAY_PHONE_CARD_FRAGMENT_TAG).addToBackStack(Contants.FragmentTag.PAYMENT_WAY_PHONE_CARD_FRAGMENT_TAG).commit();
		}else if(target.equals(Contants.FragmentTag.PAYMENT_WAY_GAME_CARD_FRAGMENT_TAG)){
			CYMGPaymentWayGameCardFragment cymgPaymentWayGameCardFragment=new CYMGPaymentWayGameCardFragment();
			cymgPaymentWayGameCardFragment.setArguments(bundle);
			getSupportFragmentManager().beginTransaction().replace(ResourceUtil.getResourceIDByName(mPackageName, "id", "payment_root_layout"), cymgPaymentWayGameCardFragment
					,Contants.FragmentTag.PAYMENT_WAY_GAME_CARD_FRAGMENT_TAG).addToBackStack(Contants.FragmentTag.PAYMENT_WAY_GAME_CARD_FRAGMENT_TAG).commit();
		}else if(target.equals(Contants.FragmentTag.PAYMENT_WAY_GAME_CARD_PROMPT_FRAGMENT_TAG)){
			CYMGPaymentWayCardPromptFragment cymgPaymentWayCardPromptFragment=new CYMGPaymentWayCardPromptFragment();
			cymgPaymentWayCardPromptFragment.setArguments(bundle);
			getSupportFragmentManager().beginTransaction().replace(ResourceUtil.getResourceIDByName(mPackageName, "id", "payment_root_layout"), cymgPaymentWayCardPromptFragment
					,Contants.FragmentTag.PAYMENT_WAY_GAME_CARD_PROMPT_FRAGMENT_TAG).addToBackStack(Contants.FragmentTag.PAYMENT_WAY_GAME_CARD_PROMPT_FRAGMENT_TAG).commit();
			isShowPromptFragment=true;
		}
	}
	
	/**
	 * 返回到商品列表页面，然后PayHelper会在该页面进行订单验证
	 */
	public void back2PaymentFragment(){
		int stackCount = getSupportFragmentManager().getBackStackEntryCount();
		while(stackCount > 0){
			log.d("stackCount = "+stackCount);
			getSupportFragmentManager().popBackStack();
			stackCount--;
		}
	}
	
	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		if(keyCode == KeyEvent.KEYCODE_MENU){
			mMenuClickCount++;
			if(mMenuClickCount == 9){
				Toast.makeText(CYMGPaymentActivity.this, SDKConfig.VERSION, Toast.LENGTH_LONG).show();
				mMenuClickCount=0;
			}
		}
		return super.onKeyDown(keyCode, event);
	}
	
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (data == null) {
        	CYMGPayHelper.getInstance().payException(CYMGPrompt.CODE_PAY_FAILED);
            return;
        }
        String str = data.getExtras().getString("pay_result");
        if (str.equalsIgnoreCase("success")) {
        	log.d("onActivityResult,银联支付成功");
        	new Handler(Looper.getMainLooper()).post(new Runnable() {
				
				@Override
				public void run() {
					GoodsItem goodsItem = (GoodsItem)mData.getSerializable(Params.GOODSITEM);
					back2PaymentFragment();
					CYMGPayHelper.getInstance().paySuccess(mUID,goodsItem, mData.getString(Params.ORDER_ID));
				}
			});
        } else if (str.equalsIgnoreCase("fail")) {
        	log.d("onActivityResult,银联支付失败");
        	new Handler(Looper.getMainLooper()).post(new Runnable() {
				
				@Override
				public void run() {
					CYMGPayHelper.getInstance().payException(CYMGPrompt.CODE_PAY_FAILED);
		        	goback();
				}
			});
        	
        } else if (str.equalsIgnoreCase("cancel")) {
        	log.d("onActivityResult,银联支付取消");
        	new Handler(Looper.getMainLooper()).post(new Runnable() {
				
				@Override
				public void run() {
					CYMGPayHelper.getInstance().payException(CYMGPrompt.CODE_PAY_CANCEL);
		        	goback();
				}
			});
        	
        }
	}
	
}
