package com.changyou.mgp.sdk.mbi.pay.adapter;

import java.util.List;

import android.content.Context;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;

import com.changyou.mgp.sdk.mbi.config.CYMGProtocolConfig;
import com.changyou.mgp.sdk.mbi.entity.GoodsItem;
import com.changyou.mgp.sdk.mbi.image.MGPImageLoader;
import com.changyou.mgp.sdk.mbi.log.CYLog;
import com.changyou.mgp.sdk.mbi.pay.id.PayResource;
import com.changyou.mgp.sdk.mbi.pay.viewcache.GoodsListViewCache;
import com.changyou.mgp.sdk.mbi.utils.SettingSPUtil;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.assist.ImageScaleType;
import com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer;
/**
 * 
 * 功能描述：商品列表Adapter
 *
 * @author 严峥(yanzheng)
 * @date 2014-1-20 上午10:16:44
 * 修改历史：(修改人，修改时间，修改原因/内容)
 */
public class GoodsListAdapter extends BaseAdapter {
	
	private CYLog log = CYLog.getInstance();
	
	private Context mContext;
	private List<GoodsItem> mList;
	private DisplayImageOptions options;
	private int a=1;
	private int b=2;

	private PayResource mPayResource;
	
	public GoodsListAdapter(Context contetx,List<GoodsItem> list){
		this.mContext=contetx;
		this.mList=list;
		this.mPayResource=PayResource.getInstance(mContext);
		this.options = new DisplayImageOptions.Builder().showImageOnLoading(mPayResource.mgp_payment_item_icon)
				.showImageForEmptyUri(mPayResource.mgp_payment_item_icon)
				.showImageOnFail(mPayResource.mgp_payment_item_icon)
//				.displayer(new RoundedBitmapDisplayer(90))
				.cacheInMemory(true)
				.cacheOnDisc(true)
				.imageScaleType(ImageScaleType.NONE)
				.build();
//		this.options = DisplayImageOptions.createSimple();
	}

	@Override
	public int getCount() {
		// TODO Auto-generated method stub
		return mList.size();
	}

	@Override
	public Object getItem(int position) {
		// TODO Auto-generated method stub
		return mList.get(position);
	}

	@Override
	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return position;
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		GoodsListViewCache holder = null;
		if(convertView==null){
			holder = new GoodsListViewCache(mContext);
			convertView=LayoutInflater.from(mContext).inflate(PayResource.getInstance(mContext).mgp_payment_item_1_03, null);
			holder.setView(convertView);
			convertView.setTag(holder); 
		}else{
			holder=(GoodsListViewCache) convertView.getTag();
		}
		final GoodsItem mGoodsItem=mList.get(position);
		holder.getGoodsLl().setTag(a);
		holder.getGoodsPriceLl().setTag(a);
		if(mGoodsItem.getType()==3){
			holder.getGoodsLl().setTag(b);
			holder.getGoodsPriceLl().setTag(b);
		}
		ImageView mImageView=holder.getGoodsIconImg();
		String url=mGoodsItem.getGoods_icon().toString();
		MGPImageLoader.getInstance(mContext).displayImage(url, mImageView, options);
		holder.getGoodsNameTv().setText(mGoodsItem.getGoods_name());
		holder.getGoodsDescribeTv().setText(mGoodsItem.getGoods_describe());
		double price=Double.valueOf(mGoodsItem.getGoods_price());
		int tag1 = (Integer) holder.getGoodsLl().getTag();
		if(tag1==b){
			holder.getBuyLl().setGravity(Gravity.CENTER);
			holder.getGoodsLl().setBackgroundDrawable(mContext.getResources().getDrawable(PayResource.getInstance(mContext).mgp_payment_list_suixingou_item_xbg_1_03));
		}else{
			holder.getBuyLl().setGravity(Gravity.CENTER_HORIZONTAL);
			holder.getGoodsLl().setBackgroundDrawable(mContext.getResources().getDrawable(PayResource.getInstance(mContext).mgp_payment_list_item_xbg_1_03));
		}
		int tag2 = (Integer) holder.getGoodsPriceLl().getTag();
		if(tag2==b){
			if(SettingSPUtil.getLandScape(mContext)==CYMGProtocolConfig.PORTRAIT){
				holder.getGoodsPriceLl().setVisibility(View.GONE);
			}else{
				holder.getGoodsPriceLl().setVisibility(View.INVISIBLE);
			}
		}else{
			holder.getGoodsPriceLl().setVisibility(View.VISIBLE);
			holder.getGoodsPriceTv().setText(String.valueOf((int)price));
		}
		return convertView;
	}

}
