package com.changyou.mgp.sdk.mbi.pay.ui;

import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.Dialog;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RadioGroup.OnCheckedChangeListener;
import android.widget.TextView;

import com.changyou.mgp.sdk.mbi.R;
import com.changyou.mgp.sdk.mbi.config.CYMGPrompt;
import com.changyou.mgp.sdk.mbi.config.HttpContants;
import com.changyou.mgp.sdk.mbi.config.Params;
import com.changyou.mgp.sdk.mbi.entity.GoodsItem;
import com.changyou.mgp.sdk.mbi.http.MyAsyncResponseHandler;
import com.changyou.mgp.sdk.mbi.http.MyHttpClient;
import com.changyou.mgp.sdk.mbi.log.CYLog;
import com.changyou.mgp.sdk.mbi.platform.CYMGPayHelper;
import com.changyou.mgp.sdk.mbi.ui.base.BaseFragment;
import com.changyou.mgp.sdk.mbi.ui.widget.WaitingDialog;
import com.changyou.mgp.sdk.mbi.utils.DesUtil;
import com.changyou.mgp.sdk.mbi.utils.MyToast;
import com.changyou.mgp.sdk.mbi.utils.NetWorkUtils;
import com.loopj.android.http.RequestParams;

public class CYMGPaymentWayPhoneCardFragment extends BaseFragment implements OnClickListener,OnCheckedChangeListener{

	private CYLog log = CYLog.getInstance();
	
	private Activity mActivity;

	private ImageButton mServiceImgBtn;
	private Button mRightBtn;
	private TextView mTitleTv;
	private ImageButton mBackIBtn;
	private View mTitle;
	
	private TextView mSelectTv;
	private EditText mNumberEt;
	private EditText mPasswordEt;
	private Button mPay;
	
	private Dialog mSelectDialog;
	private RadioGroup mRadioGroup;
	private RadioButton mCMCCRb;
	private RadioButton mUINCOMRb;
	private RadioButton mTELECOMRb;
	
	private WaitingDialog mWaitingDialog;
	
	private Bundle mBundle;
	
	private boolean isSetButtonDrawable=false;
	private String mPayChannel=null;
	private static final String SZX="SZX";
	private static final String UINCOM="UNICOM";
	private static final String TELECOM="TELECOM";
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.mgp_payment_way_card, container,false);
		initTitle(view);
		initView(view);
		initWaitingDialog();
		initSelectDialog();
		initData();
		initEvent();
		return view;
	}
	
	@Override
	public void onAttach(Activity activity) {
		super.onAttach(activity);
		this.mActivity = activity;
	}
	
	@Override
	public void onDestroy() {
		super.onDestroy();
	}
	
	private void initTitle(View view){
		this.mTitle = view.findViewById(R.id.mgp_payment_way_card_title);
		this.mTitleTv = (TextView)mTitle.findViewById(R.id.mgp_title_tv);
		this.mTitleTv.setText(R.string.mgp_title_tv_payment_way_phone_card);
		this.mBackIBtn = (ImageButton)mTitle.findViewById(R.id.mgp_title_left_ibtn);
		this.mRightBtn = (Button)mTitle.findViewById(R.id.mgp_title_right_btn);
		this.mServiceImgBtn = (ImageButton)mTitle.findViewById(R.id.mgp_title_right_imgbtn);
		this.mRightBtn.setVisibility(View.GONE);
		this.mServiceImgBtn.setVisibility(View.GONE);
	}
	
	private void initView(View view){
		this.mSelectTv=(TextView) view.findViewById(R.id.mgp_payment_way_card_select_TextView);
		this.mSelectTv.setHint(R.string.mgp_payment_way_card_select1_tv);
		this.mNumberEt=(EditText) view.findViewById(R.id.mgp_payment_way_card_number_EditText);
		this.mPasswordEt=(EditText) view.findViewById(R.id.mgp_payment_way_card_Password_EditText);
		this.mPay=(Button) view.findViewById(R.id.mgp_payment_way_card_pay_Button);
	}
	
	private void initWaitingDialog(){
		this.mWaitingDialog = new WaitingDialog(mActivity);
		this.mWaitingDialog.setMessage(mActivity.getString(R.string.mgp_comitting));
	}
	
	private void initSelectDialog(){
		this.mSelectDialog = new Dialog(mActivity,R.style.mgp_onlineserver_custom_dialog_style);
		this.mSelectDialog.setContentView(R.layout.mgp_payment_way_phone_card_dialog);
		this.mRadioGroup=(RadioGroup) mSelectDialog.findViewById(R.id.mgp_payment_way_phone_card_RadioGroup);
		this.mCMCCRb=(RadioButton) mRadioGroup.findViewById(R.id.mgp_payment_way_phone_card_RadioButton1);
		this.mUINCOMRb=(RadioButton) mRadioGroup.findViewById(R.id.mgp_payment_way_phone_card_RadioButton2);
		this.mTELECOMRb=(RadioButton) mRadioGroup.findViewById(R.id.mgp_payment_way_phone_card_RadioButton3);
		this.mCMCCRb.setButtonDrawable(mActivity.getResources().getDrawable(R.drawable.mgp_payment_way_card_dialog_btn_img_selected));
	}
	
	@Override
	protected void initData() {
		this.mBundle=getArguments();
	}

	@Override
	protected void initEvent() {
		this.mBackIBtn.setOnClickListener(this);
		this.mSelectTv.setOnClickListener(this);
		this.mPay.setOnClickListener(this);
		this.mSelectDialog.setCanceledOnTouchOutside(true);
		this.mSelectDialog.setCancelable(true);
		this.mRadioGroup.setOnCheckedChangeListener(this);
	}

	@Override
	public void onClick(View v) {
		if(v.getId()==R.id.mgp_title_left_ibtn){
			((CYMGPaymentActivity)mActivity).goback();
		}else if(v.getId()==R.id.mgp_payment_way_card_select_TextView){
			showSelectDialog();
		}else if(v.getId()==R.id.mgp_payment_way_card_pay_Button){
			if(checkET()){
				log.d("电话卡支付");
				YeePay();
			}else{
				log.d("电话卡输入参数不完整");
			}
		}
	}
	
	@Override
	public void onCheckedChanged(RadioGroup group, int checkedId) {
		if(checkedId==mCMCCRb.getId()){
			this.mPayChannel=SZX;
			this.mSelectTv.setText(R.string.mgp_payment_way_card_phone1);
		}else if(checkedId==mUINCOMRb.getId()){
			this.mPayChannel=UINCOM;
			this.mSelectTv.setText(R.string.mgp_payment_way_card_phone2);
		}else if(checkedId==mTELECOMRb.getId()){
			this.mPayChannel=TELECOM;
			this.mSelectTv.setText(R.string.mgp_payment_way_card_phone3);
		}
		if(isSetButtonDrawable==false){
			this.mCMCCRb.setButtonDrawable(mActivity.getResources().getDrawable(R.drawable.mgp_payment_way_card_dialog_img_xbg));
			isSetButtonDrawable=true;
		}
		dismissSelectDialog();
	}
	
	private void showWaitingDialog(){
		if(mWaitingDialog!=null){
			mWaitingDialog.show();
		}
	}
	
	private void dismissWaitingDialog(){
		if(mWaitingDialog.isShowing()){
			mWaitingDialog.dismiss();
		}
	}
	
	private void showSelectDialog(){
		if(mSelectDialog!=null){
			mSelectDialog.show();
		}
	}
	
	private void dismissSelectDialog(){
		if(mSelectDialog.isShowing()){
			mSelectDialog.dismiss();
		}
	}
	
	/**
	 * 
	 * 功能描述：检查输入参数合法性
	 *
	 * @author 严峥(yanzheng)
	 * @param @return
	 * @return boolean
	 * @date 2014-4-26 下午3:16:20
	 *
	 * 修改历史 ：(修改人，修改时间，修改原因/内容)
	 */
	private boolean checkET(){
		if(TextUtils.isEmpty(mSelectTv.getText())){
			MyToast.showToast(mActivity,mActivity.getString(R.string.mgp_payment_way_card_phone_null_toast));
			return false;
		}
		if(TextUtils.isEmpty(mNumberEt.getText())){
			MyToast.showToast(mActivity,mActivity.getString(R.string.mgp_payment_way_card_number_null_toast));
			return false;
		}
		if(TextUtils.isEmpty(mPasswordEt.getText())){
			MyToast.showToast(mActivity,mActivity.getString(R.string.mgp_payment_way_card_password_null_toast));
			return false;
		}
		return true;
	}
	
	/**
	 * 
	 * 功能描述：加密明文密码
	 * 
	 * @author 严峥(yanzheng)
	 * @param @param password
	 * @param @return
	 * @return String
	 * @date 2014-3-4 下午7:24:31
	 * 
	 *       修改历史 ：(修改人，修改时间，修改原因/内容)
	 */
	private String desPassword(String password) {
		String result = null;
		try {
			result = new DesUtil().encrypt(password);
		} catch (Exception e) {
			log.e(e);
		}
		return result;
	}
	
	/**
	 * 
	 * 功能描述：易宝支付
	 *
	 * @author 严峥(yanzheng)
	 * @param 
	 * @return void
	 * @date 2014-4-26 下午3:15:55
	 *
	 * 修改历史 ：(修改人，修改时间，修改原因/内容)
	 */
	private void YeePay(){
		if(NetWorkUtils.isNetworkConnected(mActivity)){
			final String uid=mBundle.getString(Params.UID);
			final GoodsItem goodsItem=(GoodsItem) mBundle.getSerializable(Params.GOODSITEM);
			final String orderId=mBundle.getString(Params.ORDER_ID);
			MyHttpClient mHttpClient = new MyHttpClient(mActivity);
			RequestParams params = new RequestParams();
			params.put("orderNum", orderId);
			params.put("goodsPrice", goodsItem.getGoods_price());
			params.put("cardAmt", "0");
			params.put("cardNum", mNumberEt.getText().toString().trim());
			params.put("cardPwd", desPassword(mPasswordEt.getText().toString().trim()));
			params.put("payChannel", mPayChannel);
			params.put("userId", uid);
			mHttpClient.post(HttpContants.getURL(HttpContants.YEE_PAY), params, new MyAsyncResponseHandler(){
				
				@Override
				public void onStart() {
					showWaitingDialog();
				}
				
				@Override
				public void onSuccess(int statusCode, String content) {
					log.d("-----onSuccess,content:"+content);
					dismissWaitingDialog();
					if(!TextUtils.isEmpty(content)){
						try {
							JSONObject jsonObject=new JSONObject(content);
							if(jsonObject.getBoolean("success")){
								CYMGPayHelper.getInstance().paySuccess(uid, goodsItem, orderId);
							}else{
								CYMGPayHelper.getInstance().payException(CYMGPrompt.CODE_PAY_FAILED);
							}
						} catch (JSONException e) {
							log.e(e);
						}
					}
				}
				
				@Override
				public void onFailure(int statusCode, Throwable error,
						String content) {
					log.d("-----onFailure,content:"+content);
					dismissWaitingDialog();
					CYMGPayHelper.getInstance().payException(CYMGPrompt.CODE_PAY_FAILED);
				}
			});
		}else{
			MyToast.showToast(mActivity,mActivity.getString(R.string.mgp_net_error_hint));
		}
	}
}
