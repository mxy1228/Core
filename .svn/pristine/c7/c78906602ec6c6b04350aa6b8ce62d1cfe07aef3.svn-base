package com.changyou.mgp.sdk.mbi.account.ui;

import java.util.HashMap;
import java.util.Map;

import org.codehaus.jackson.type.TypeReference;

import android.app.Activity;
import android.content.DialogInterface;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentTransaction;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.Toast;

import com.changyou.mgp.sdk.mbi.R;
import com.changyou.mgp.sdk.mbi.config.Contants;
import com.changyou.mgp.sdk.mbi.config.HttpContants;
import com.changyou.mgp.sdk.mbi.entity.ErrorInfo;
import com.changyou.mgp.sdk.mbi.http.MyAsyncResponseHandler;
import com.changyou.mgp.sdk.mbi.http.MyHttpClient;
import com.changyou.mgp.sdk.mbi.log.CYLog;
import com.changyou.mgp.sdk.mbi.utils.JSONUtil;
import com.changyou.mgp.sdk.mbi.utils.NetWorkUtils;
import com.changyou.mgp.sdk.mbi.utils.SystemUtils;

public class CYMGQuickIntoDialogFragment extends BaseDialogFragment implements OnClickListener{
	
	private CYLog log = CYLog.getInstance();
	
	private static Activity mActivity;
	
	private ImageButton mCloseBtn;
	private Button mQuickIntoBtn;
	private Button mChangYouBtn;
	private Button mChengYouBtn;
	
	private String mPhoneNumStr;
	
	private CYMGLoadingDialogFragment mLoadingDialog;
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view=inflater.inflate(R.layout.mgp_sdk_2_0_dialog_quick_into, container,false);
		initView(view);
		initData();
		initEvent();
		return view;
	}
	

	@Override
	protected void initView(View view) {
		mCloseBtn=(ImageButton) view.findViewById(R.id.mgp_sdk_2_0_quick_into_close_ImageButton);
		mQuickIntoBtn=(Button) view.findViewById(R.id.mgp_sdk_2_0_quick_into_kuaisu_Button);
		mChengYouBtn=(Button) view.findViewById(R.id.mgp_sdk_2_0_quick_into_chengyou_Button);
		mChangYouBtn=(Button) view.findViewById(R.id.mgp_sdk_2_0_quick_into_changyou_Button);
		mLoadingDialog=CYMGLoadingDialogFragment.newInewInstance(mActivity);
		mLoadingDialog.setMessage(mActivity.getString(R.string.mgp_sdk_2_0_loading_quick_into));
	}

	@Override
	protected void initData() {
		mPhoneNumStr=SystemUtils.getNativePhoneNumber(mActivity);
	}

	@Override
	protected void initEvent() {
		mCloseBtn.setOnClickListener(this);
		mQuickIntoBtn.setOnClickListener(this);
		mChengYouBtn.setOnClickListener(this);
		mChangYouBtn.setOnClickListener(this);
		
	}
	
	public static CYMGQuickIntoDialogFragment newInewInstance(Activity activity,Bundle bundle){
		mActivity=activity;
		CYMGQuickIntoDialogFragment cYMGQuickIntoDialogFragment=new CYMGQuickIntoDialogFragment();
		cYMGQuickIntoDialogFragment.setArguments(bundle);
		cYMGQuickIntoDialogFragment.setStyle(DialogFragment.STYLE_NORMAL, R.style.mgp_sdk_2_0_mian_dialog);
		return cYMGQuickIntoDialogFragment;
	}

	@Override
	public void onCancel(DialogInterface dialog) {
		mActivity.finish();
	}
	
	@Override
	public void onClick(View v) {
		if(v.getId()==R.id.mgp_sdk_2_0_quick_into_close_ImageButton){
			mActivity.finish();
		}else if(v.getId()==R.id.mgp_sdk_2_0_quick_into_kuaisu_Button){
			if(checkET()){
				getAuthCodeFromServer();
			}else{
				((CYMGMainDialogFragmentActivity)mActivity).changeDialogFragment(Contants.DialogFragmentTag.REGISTER_CONTAINER, null);
			}
		}else if(v.getId()==R.id.mgp_sdk_2_0_quick_into_chengyou_Button){
			((CYMGMainDialogFragmentActivity)mActivity).changeDialogFragment(Contants.DialogFragmentTag.CHENGYOU_LOGIN, null);
		}else if(v.getId()==R.id.mgp_sdk_2_0_quick_into_changyou_Button){
			((CYMGMainDialogFragmentActivity)mActivity).changeDialogFragment(Contants.DialogFragmentTag.CHANGYOU_LOGIN, null);
		}
	}
	
	private boolean checkET(){
		if(TextUtils.isEmpty(mPhoneNumStr)){
			return false;
		}else if(!NetWorkUtils.isNetworkConnected(mActivity)){
			return false;
		}
		return true;
	}
	
	public void showDialog() {
		FragmentTransaction transaction=((FragmentActivity)mActivity).getSupportFragmentManager().beginTransaction();
		show(transaction, Contants.DialogFragmentTag.QUICK_INTO);
	}
	
	private void getAuthCodeFromServer(){
		MyHttpClient myHttpClient=new MyHttpClient(mActivity);
		Map map=new HashMap();
		map.put("account", mPhoneNumStr);
		myHttpClient.post(HttpContants.getURL(HttpContants.CHENGYOU_AUTH_CODE), map, new MyAsyncResponseHandler(){
			@Override
			public void onStart() {
				mLoadingDialog.showDialog();
			}
			
			@Override
			public void onSuccess(int statusCode, String content) {
				log.d("content:"+content);
				try {
					mLoadingDialog.dismissDialog();
					Bundle bundle=new Bundle();
					bundle.putString("phone", mPhoneNumStr);
					((CYMGMainDialogFragmentActivity)mActivity).changeDialogFragment(Contants.DialogFragmentTag.REGISTER_SET_AUTH_CODE, bundle);
				} catch (Exception e) {
					log.e(e);
				}
			}
			
			@Override
			public void onFailure(int statusCode, Throwable error,
					String content) {
				log.d("content:"+content);
				try {
					mLoadingDialog.dismissDialog();
					if (!TextUtils.isEmpty(content)) {
						ErrorInfo info = JSONUtil.getMapper().readValue(content,new TypeReference<ErrorInfo>() {});
						if (info != null) {
							Toast.makeText(mActivity, info.getClient_message(), Toast.LENGTH_SHORT).show();
						} else {
							Toast.makeText(mActivity, R.string.mgp_sdk_2_0_error_common_server, Toast.LENGTH_SHORT).show();
						}
					} else {
						Toast.makeText(mActivity, R.string.mgp_sdk_2_0_error_common_server, Toast.LENGTH_SHORT).show();
					}
				} catch (Exception e) {
					log.e(e);
				}
			}
		});
	}
	
}
