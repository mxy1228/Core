package com.changyou.mgp.sdk.mbi.account.ui;

import android.app.Activity;
import android.os.Bundle;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentTransaction;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;

import com.changyou.mgp.sdk.mbi.account.id.AccResource;
import com.changyou.mgp.sdk.mbi.config.Contants;
import com.changyou.mgp.sdk.mbi.utils.NetWorkUtils;

public class CYMGActivateCodeDialogFragment extends BaseDialogFragment implements OnClickListener{
	
	private static final int CODE_MIN = 8;
	
	private static Activity mActivity;
	
	private ImageButton mBackBtn;
	private ImageButton mCloseBtn;
	private EditText mActivateCodeET;
	private Button mCommitBtn;
	private TextView mNotCodeTv;
	
	private Bundle mBundle;
	
	private String mActivateCodeStr;
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view=inflater.inflate(AccResource.getInstance(mActivity).mgp_sdk_2_0_dialog_activate_code, container,false);
		initView(view);
		initData();
		initEvent();
		return view;
	}
	

	@Override
	protected void initView(View view) {
		mBackBtn=(ImageButton) view.findViewById(AccResource.getInstance(mActivity).mgp_sdk_2_0_activate_code_back_ImageButton);
		mCloseBtn=(ImageButton) view.findViewById(AccResource.getInstance(mActivity).mgp_sdk_2_0_activate_code_close_ImageButton);
		mActivateCodeET=(EditText) view.findViewById(AccResource.getInstance(mActivity).mgp_sdk_2_0_activate_code_EditText);
		mCommitBtn=(Button) view.findViewById(AccResource.getInstance(mActivity).mgp_sdk_2_0_activate_code_commit_Button);
		mNotCodeTv=(TextView) view.findViewById(AccResource.getInstance(mActivity).mgp_sdk_2_0_activate_code_notcode_TextView);
	}

	@Override
	protected void initData() {
		mBundle=getArguments();
	}

	@Override
	protected void initEvent() {
		mBackBtn.setOnClickListener(this);
		mCloseBtn.setOnClickListener(this);
		mCommitBtn.setOnClickListener(this);
		mNotCodeTv.setOnClickListener(this);
	}
	
	public static CYMGActivateCodeDialogFragment newInewInstance(Activity activity,Bundle bundle){
		mActivity=activity;
		CYMGActivateCodeDialogFragment cymgActivateCodeDialogFragment=new CYMGActivateCodeDialogFragment();
		cymgActivateCodeDialogFragment.setArguments(bundle);
		cymgActivateCodeDialogFragment.setStyle(DialogFragment.STYLE_NORMAL, AccResource.getInstance(mActivity).mgp_sdk_2_0_mian_dialog);
		return cymgActivateCodeDialogFragment;
	}

	@Override
	public void onClick(View v) {
		if(v.getId()==AccResource.getInstance(mActivity).mgp_sdk_2_0_activate_code_back_ImageButton){
			dismiss();
		}else if(v.getId()==AccResource.getInstance(mActivity).mgp_sdk_2_0_activate_code_close_ImageButton){
			mActivity.finish();
		}else if(v.getId()==AccResource.getInstance(mActivity).mgp_sdk_2_0_activate_code_commit_Button){
			if(checkET()){
				
			}
		}else if(v.getId()==AccResource.getInstance(mActivity).mgp_sdk_2_0_activate_code_notcode_TextView){
			
		}
	}
	
	private boolean checkET(){
		mActivateCodeStr=mActivateCodeET.getText().toString().trim();
		if(TextUtils.isEmpty(mActivateCodeStr)){
			return false;
		}else if(mActivateCodeStr.length()<CODE_MIN){
			return false;
		}else if(!NetWorkUtils.isNetworkConnected(mActivity)){
			return false;
		}
		return true;
	}
	
	public void showDialog() {
		FragmentTransaction transaction=((FragmentActivity)mActivity).getSupportFragmentManager().beginTransaction();
		show(transaction, Contants.DialogFragmentTag.ACTIVATE_CODE);
	}
	
}
